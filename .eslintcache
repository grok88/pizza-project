[{"F:\\it_incubator\\projects\\Test\\pizza\\src\\index.tsx":"1","F:\\it_incubator\\projects\\Test\\pizza\\src\\App.tsx":"2","F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\header\\Header.tsx":"3","F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\button\\Button.tsx":"4","F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\categories\\Categories.tsx":"5","F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\index.ts":"6","F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\sortPopup\\SortPopup.tsx":"7","F:\\it_incubator\\projects\\Test\\pizza\\src\\pages\\index.tsx":"8","F:\\it_incubator\\projects\\Test\\pizza\\src\\pages\\Home\\Home.tsx":"9","F:\\it_incubator\\projects\\Test\\pizza\\src\\pages\\cart\\Cart.tsx":"10","F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\pizza-block\\PizzaBlock.tsx":"11","F:\\it_incubator\\projects\\Test\\pizza\\src\\redux\\store.ts":"12","F:\\it_incubator\\projects\\Test\\pizza\\src\\redux\\filters-reducer.ts":"13","F:\\it_incubator\\projects\\Test\\pizza\\src\\redux\\pizzas-reducer.ts":"14","F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\pizza-block\\pizza-loader\\Pizza-loader.tsx":"15","F:\\it_incubator\\projects\\Test\\pizza\\src\\redux\\cart-reducer.ts":"16","F:\\it_incubator\\projects\\Test\\pizza\\src\\pages\\cart\\cart-item\\CartItem.tsx":"17"},{"size":473,"mtime":1609052647008,"results":"18","hashOfConfig":"19"},{"size":846,"mtime":1609141301218,"results":"20","hashOfConfig":"19"},{"size":3451,"mtime":1609338545115,"results":"21","hashOfConfig":"19"},{"size":913,"mtime":1609686259006,"results":"22","hashOfConfig":"19"},{"size":1515,"mtime":1609143388355,"results":"23","hashOfConfig":"19"},{"size":283,"mtime":1608981668452,"results":"24","hashOfConfig":"19"},{"size":2528,"mtime":1609310192010,"results":"25","hashOfConfig":"19"},{"size":87,"mtime":1608972446497,"results":"26","hashOfConfig":"19"},{"size":2812,"mtime":1609661298782,"results":"27","hashOfConfig":"19"},{"size":7713,"mtime":1609686306260,"results":"28","hashOfConfig":"19"},{"size":3739,"mtime":1609686258971,"results":"29","hashOfConfig":"19"},{"size":768,"mtime":1609338479227,"results":"30","hashOfConfig":"19"},{"size":980,"mtime":1609160418208,"results":"31","hashOfConfig":"19"},{"size":1548,"mtime":1609587215055,"results":"32","hashOfConfig":"19"},{"size":1317,"mtime":1609141439924,"results":"33","hashOfConfig":"19"},{"size":5320,"mtime":1609685875281,"results":"34","hashOfConfig":"19"},{"size":4596,"mtime":1609686259012,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1rjistk",{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},"F:\\it_incubator\\projects\\Test\\pizza\\src\\index.tsx",[],["77","78"],"F:\\it_incubator\\projects\\Test\\pizza\\src\\App.tsx",["79","80","81"],"import React, {useEffect} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {Header} from './components';\nimport {Cart, Home} from './pages';\nimport {useDispatch} from 'react-redux';\nimport {getPizzas} from './redux/pizzas-reducer';\n\n\nfunction App() {\n    // const dispatch = useDispatch();\n    //\n    // useEffect(() => {\n    //     dispatch(getPizzas());\n    // }, [])\n\n    return <div className=\"wrapper\">\n        <Header/>\n        <div className=\"content\">\n            <Switch>\n                <Route exact path={'/'} render={() => <Home/>}/>\n                <Route exact path={'/cart'} render={() => <Cart/>}/>\n                <Route path={'/404'} render={() => <h1>Page not Found!</h1>}/>\n                <Redirect from={'*'} to={'/404'}/>\n            </Switch>\n        </div>\n    </div>\n}\n\nexport default App;\n","F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\header\\Header.tsx",[],"F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\button\\Button.tsx",[],"F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\categories\\Categories.tsx",["82"],"import React, {useState} from 'react';\n\ntype CategoriesPropsType = {\n    items: string[]\n    onSelectCategory: (index: number | null) => void\n    activeCategory: null | number\n}\nconst Categories: React.FC<CategoriesPropsType> = React.memo((props) => {\n    const {items, onSelectCategory, activeCategory} = props;\n\n    return <div className=\"categories\">\n        <ul>\n            <li onClick={() => onSelectCategory(null)} className={activeCategory === null ? 'active' : ''}>Все</li>\n            {items.map((item, i) => <li key={i} onClick={() => onSelectCategory(i)}\n                                        className={activeCategory === i ? 'active' : ''}>{item}</li>)}\n        </ul>\n    </div>\n})\n\n//class\n// interface IState {\n//\n// }\n// interface IProps {\n//     items: string[]\n// }\n//\n// class Categories extends React.Component<IProps, IState> {\n//     state = {\n//         activeItem: null\n//     }\n//\n//     onSelectedItem = (index: number) => {\n//         this.setState({\n//             activeItem: index\n//         })\n//     }\n//\n//     render() {\n//         const {items} = this.props;\n//\n//         return <div className=\"categories\">\n//             <ul>\n//                 <li className=\"active\">Все</li>\n//                 {items.map((item, i) => <li key={i} onClick={() => this.onSelectedItem(i)}\n//                                             className={this.state.activeItem === i ? 'active' : ''}>{item}</li>)}\n//             </ul>\n//         </div>\n//     }\n// }\n\nexport default Categories;","F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\index.ts",[],"F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\sortPopup\\SortPopup.tsx",["83"],"import React, {useEffect, useReducer, useRef, useState} from 'react';\n\ntype SortPopupPropsType = {\n    items: Array<{name:string, type:string}>\n    activeSortType:string\n    onClickSortBy:(type:string) => void\n}\nconst SortPopup: React.FC<SortPopupPropsType> = React.memo((props) => {\n    const {items,activeSortType,onClickSortBy} = props;\n    const [popupEditMode, setPopupEditMode] = useState<boolean>(false);\n\n      // @ts-ignore\n    const  activeLabel =  items.find(item => item.type === activeSortType ).name;\n    const sortRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        document.body.addEventListener('click', handleOutsideClick);\n    }, []);\n\n    const handleOutsideClick = (event: Event) => {\n\n        //@ts-ignore\n        const path = event.path || (event.composedPath && event.composedPath()) || composedPath(event.target);\n\n        if (!path.includes(sortRef.current)) {\n            setPopupEditMode(false);\n        }\n    }\n\n    const toggleEditMode = () => {\n        setPopupEditMode(!popupEditMode);\n    }\n\n    const onSelectItem = (i: any) => {\n        onClickSortBy(i)\n        setPopupEditMode(false);\n    }\n    return <div className=\"sort\" ref={sortRef}>\n        <div className=\"sort__label\">\n            <svg\n                className={popupEditMode ? 'rotated' : ''}\n                width=\"10\"\n                height=\"6\"\n                viewBox=\"0 0 10 6\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n                    fill=\"#2C2C2C\"\n                />\n            </svg>\n            <b>Сортировка по:</b>\n            <span onClick={toggleEditMode}>{activeLabel}</span>\n        </div>\n        {popupEditMode && <div className=\"sort__popup\">\n            <ul>\n                {items.map((item, i) => <li key={`${item.type}_${i}`}\n                                                     className={activeSortType === item.type ? 'active' : ''}\n                                                     onClick={() => onSelectItem(item)}>{item.name}</li>)}\n            </ul>\n        </div>}\n\n    </div>\n})\n\nexport default SortPopup;","F:\\it_incubator\\projects\\Test\\pizza\\src\\pages\\index.tsx",[],"F:\\it_incubator\\projects\\Test\\pizza\\src\\pages\\Home\\Home.tsx",["84","85"],"import React, {useCallback, useEffect} from 'react';\nimport {Categories, PizzaBlock, SortPopup} from '../../components';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setCategory, setSortBy} from '../../redux/filters-reducer';\nimport {AppRootStateType} from '../../redux/store';\nimport {getPizzas} from '../../redux/pizzas-reducer';\nimport {setPizzaToCart} from '../../redux/cart-reducer';\nimport {PizzaObjType} from '../../components/pizza-block/PizzaBlock';\n\nexport type PizzaType = {\n    category: number\n    id: number\n    imageUrl: string\n    name: string\n    price: number\n    rating: number\n    sizes: number[]\n    types: number[]\n}\n\ntype HomePropsType = {\n    // items: PizzaType[];\n}\nconst categoryName = ['Мясные', 'Вегетарианская', 'Гриль', 'Острые', 'Закрытые']\nconst sortItems = [{name: 'популярности', type: 'popular', order: 'desc'}, {\n    name: 'цене',\n    type: 'price',\n    order: 'desc'\n}, {\n    name: 'алфавиту',\n    type: 'name',\n    order: 'asc'\n}]\n\nconst Home: React.FC<HomePropsType> = (props) => {\n    // const {items} = props;\n    const items = useSelector<AppRootStateType, PizzaType[]>(state => state.pizzas.items);\n    const isLoaded = useSelector<AppRootStateType, boolean>(state => state.pizzas.isLoaded);\n    const category = useSelector<AppRootStateType, number | null>(state => state.filters.category);\n    const sortType = useSelector<AppRootStateType, any>(state => state.filters.sortBy);\n    const cartItems = useSelector<AppRootStateType, any>(state => state.cart.items);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getPizzas(category, sortType));\n    }, [category, sortType])\n\n    const onSelectCategory = useCallback((index: number | null) => {\n        dispatch(setCategory(index));\n    }, [])\n\n    const onClickSortBy = (type: string) => {\n        dispatch(setSortBy(type));\n    }\n\n    const onAddPizzaToCart = (obj: PizzaObjType) => {\n        dispatch(setPizzaToCart(obj));\n    }\n\n    return <div className=\"container\">\n        <div className=\"content__top\">\n            <Categories items={categoryName}\n                        onSelectCategory={onSelectCategory}\n                        activeCategory={category}/>\n            <SortPopup items={sortItems} activeSortType={sortType.type} onClickSortBy={onClickSortBy}/>\n        </div>\n        <h2 className=\"content__title\">Все пиццы</h2>\n        <div className=\"content__items\">\n            {\n                items.map((item, i) => {\n                    return < PizzaBlock key={i} item={item} isLoaded={isLoaded}\n                                        onAddPizza={onAddPizzaToCart} itemPizza={cartItems[item.id]}/>\n                })\n            }\n        </div>\n    </div>\n}\n\nexport default Home;","F:\\it_incubator\\projects\\Test\\pizza\\src\\pages\\cart\\Cart.tsx",[],"F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\pizza-block\\PizzaBlock.tsx",["86"],"import React, {useCallback, useState} from 'react';\nimport {PizzaType} from '../../pages/Home/Home';\nimport classNames from 'classnames';\nimport {PizzaLoader} from './pizza-loader/Pizza-loader';\nimport Button from '../button/Button';\n\ntype PizzaBlockPropsType = {\n    item: PizzaType\n    isLoaded: boolean\n    onAddPizza: (item: any) => void\n    itemPizza: {\n        items: PizzaObjType[]\n        totalPrize: number\n    }\n}\nexport type PizzaObjType = {\n    id: number\n    imageUrl: string\n    name: string\n    price: number\n    size: number\n    type: number\n}\n\nconst PizzaBlock: React.FC<PizzaBlockPropsType> = (props) => {\n    const {item: {imageUrl, name, price, types = [], sizes = [], id}, isLoaded, onAddPizza, itemPizza} = props;\n\n    const availableTypes = ['тонкое', 'традиционное'];\n    const [activeType, setActiveType] = useState(types[0])\n    const onSelectedType = (i: number) => {\n        setActiveType(i)\n    }\n\n    const availableSizes = [26, 30, 40];\n    const [activeSize, setActiveSize] = useState(0)\n    const onSelectedSize = (i: number) => {\n        setActiveSize(i)\n    }\n\n    const onAddHandlePizza = useCallback(() => {\n        console.log('onAddHandlePizza')\n        const obj: PizzaObjType = {\n            id,\n            name,\n            imageUrl,\n            price,\n            size: activeSize,\n            type: activeType\n        }\n        onAddPizza(obj)\n    }, [])\n\n    if (isLoaded) {\n        return <PizzaLoader/>\n    }\n\n    return <div className=\"pizza-block\">\n        <img\n            className=\"pizza-block__image\"\n            src={imageUrl}\n            alt=\"Pizza\"\n        />\n        <h4 className=\"pizza-block__title\">{name}</h4>\n        <div className=\"pizza-block__selector\">\n            <ul>\n                {\n                    availableTypes.map((type, i) => <li key={i} onClick={() => onSelectedType(i)}\n                                                        className={classNames({\n                                                            active: activeType === i,\n                                                            disabled: !types.includes(i)\n                                                        })}>{type}</li>)\n                }\n            </ul>\n            <ul>\n                {\n                    availableSizes.map((size, i) => <li key={i} onClick={() => onSelectedSize(i)}\n                                                        className={classNames({\n                                                            active: activeSize === i,\n                                                            disabled: !sizes.includes(size)\n                                                        })}>{size} см.</li>)\n                }\n            </ul>\n        </div>\n        <div className=\"pizza-block__bottom\">\n            <div className=\"pizza-block__price\">от {price} ₽</div>\n            <Button onClickHandler={onAddHandlePizza} className=\"button--add\" outline>\n                <svg\n                    width=\"12\"\n                    height=\"12\"\n                    viewBox=\"0 0 12 12\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\n                        fill=\"white\"\n                    />\n                </svg>\n                <span>Добавить</span>\n                {itemPizza && <i>{itemPizza.items.length}</i>}\n            </Button>\n        </div>\n    </div>\n}\n\nexport default PizzaBlock;\n\n","F:\\it_incubator\\projects\\Test\\pizza\\src\\redux\\store.ts",[],"F:\\it_incubator\\projects\\Test\\pizza\\src\\redux\\filters-reducer.ts",[],"F:\\it_incubator\\projects\\Test\\pizza\\src\\redux\\pizzas-reducer.ts",[],"F:\\it_incubator\\projects\\Test\\pizza\\src\\components\\pizza-block\\pizza-loader\\Pizza-loader.tsx",[],"F:\\it_incubator\\projects\\Test\\pizza\\src\\redux\\cart-reducer.ts",[],"F:\\it_incubator\\projects\\Test\\pizza\\src\\pages\\cart\\cart-item\\CartItem.tsx",["87"],"import React, {useCallback} from 'react';\nimport Button from '../../../components/button/Button';\n\ntype CartItemPropsType = {\n    id: number\n    name: string\n    type: string\n    size: number\n    totalPrize: number\n    totalCount: number\n    onRemoveItem: (id: number) => void\n    onPlusCartItem: (id: number) => void\n    onMinusCartItem: (id: number) => void\n}\nexport const CartItem: React.FC<CartItemPropsType> = (props) => {\n    const {id, type, size, name, totalPrize, totalCount, onRemoveItem, onMinusCartItem, onPlusCartItem} = props;\n\n    const onRemoveItemHandler = useCallback(() => {\n        if (window.confirm('Вы желаете удалить?')) {\n            onRemoveItem(id);\n        }\n    }, [])\n\n    const plusItemHandler = () => {\n        onPlusCartItem(id);\n    }\n    const minusItemHandler = () => {\n        onMinusCartItem(id);\n    }\n    return <div className=\"cart__item\">\n        <div className=\"cart__item-img\">\n            <img\n                className=\"pizza-block__image\"\n                src=\"https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg\"\n                alt=\"Pizza\"\n            />\n        </div>\n        <div className=\"cart__item-info\">\n            <h3>{name}</h3>\n            <p>{type} тесто, {size} см.</p>\n        </div>\n        <div className=\"cart__item-count\">\n            <div className=\" button button--outline button--circle cart__item-count-minus \" onClick={minusItemHandler}>\n                <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\n                     xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n                        fill=\"#EB5A1E\"/>\n                    <path\n                        d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n                        fill=\"#EB5A1E\"/>\n                </svg>\n            </div>\n            <b>{totalCount}</b>\n            <div className=\"button button--outline button--circle cart__item-count-plus\" onClick={plusItemHandler}>\n                <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\n                     xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n                        fill=\"#EB5A1E\"/>\n                    <path\n                        d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n                        fill=\"#EB5A1E\"/>\n                </svg>\n\n            </div>\n        </div>\n        <div className=\"cart__item-price\">\n            <b>{totalPrize} ₽</b>\n        </div>\n        <div className=\"cart__item-remove\">\n            <Button className=\" button--circle\" outline onClickHandler={onRemoveItemHandler}>\n                <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\n                     xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n                        fill=\"#EB5A1E\"/>\n                    <path\n                        d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n                        fill=\"#EB5A1E\"/>\n                </svg>\n\n            </Button>\n        </div>\n    </div>\n}",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"96","line":5,"column":9,"nodeType":"94","messageId":"95","endLine":5,"endColumn":20},{"ruleId":"92","severity":1,"message":"97","line":6,"column":9,"nodeType":"94","messageId":"95","endLine":6,"endColumn":18},{"ruleId":"92","severity":1,"message":"98","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":24},{"ruleId":"92","severity":1,"message":"99","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":37},{"ruleId":"100","severity":1,"message":"101","line":47,"column":8,"nodeType":"102","endLine":47,"endColumn":28,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":51,"column":8,"nodeType":"102","endLine":51,"endColumn":10,"suggestions":"105"},{"ruleId":"100","severity":1,"message":"106","line":51,"column":8,"nodeType":"102","endLine":51,"endColumn":10,"suggestions":"107"},{"ruleId":"100","severity":1,"message":"108","line":23,"column":8,"nodeType":"102","endLine":23,"endColumn":10,"suggestions":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'getPizzas' is defined but never used.","'useState' is defined but never used.","'useReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["112"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["113"],"React Hook useCallback has missing dependencies: 'activeSize', 'activeType', 'id', 'imageUrl', 'name', 'onAddPizza', and 'price'. Either include them or remove the dependency array.",["114"],"React Hook useCallback has missing dependencies: 'id' and 'onRemoveItem'. Either include them or remove the dependency array.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [category, dispatch, sortType]",{"range":"124","text":"125"},"Update the dependencies array to be: [dispatch]",{"range":"126","text":"127"},"Update the dependencies array to be: [activeSize, activeType, id, imageUrl, name, onAddPizza, price]",{"range":"128","text":"129"},"Update the dependencies array to be: [id, onRemoveItem]",{"range":"130","text":"131"},[1642,1662],"[category, dispatch, sortType]",[1779,1781],"[dispatch]",[1396,1398],"[activeSize, activeType, id, imageUrl, name, onAddPizza, price]",[722,724],"[id, onRemoveItem]"]